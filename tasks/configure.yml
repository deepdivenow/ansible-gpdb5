---
- name: gpadmin group
  group: name=gpadmin state=present

# do not create ssh keys
# this conflicts somehow with gpssh-exkeys
- name: gpadmin user
  user: name=gpadmin comment='Greenplum Admin' createhome=yes shell=/bin/bash generate_ssh_key=yes groups=gpadmin append=yes state=present
  changed_when: False

- name: Stop and disable iptables
  service: name=firewalld state=stopped enabled=False
  ignore_errors: True

- name: Disable selinux
  lineinfile: dest=/etc/selinux/config regexp='^SELINUX=' line='SELINUX=disabled' state=present
  ignore_errors: True
  notify:
    - restart system
    - waiting for server to come back after reboot

- name: Security limits
  template:
    src=security_limits.conf.j2
    dest=/etc/security/limits.d/95-gpdb.conf
  notify:
    - restart system
    - waiting for server to come back after reboot

- name: Set SUID permission on ping utility
  file:
    path: /bin/ping
    mode: 04755
  ignore_errors: True

- name: Modify /etc/sysctl.conf
  lineinfile:
    dest: /etc/sysctl.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { regexp: '^kernel.shmmax', line: 'kernel.shmmax = 500000000', state: present }
    - { regexp: '^kernel.shmmni', line: 'kernel.shmmni = 4096', state: present }
    - { regexp: '^kernel.shmall', line: 'kernel.shmall = 4000000000', state: present }
    - { regexp: '^kernel.sem', line: 'kernel.sem = 250 512000 100 2048', state: present }
    - { regexp: '^kernel.sysrq', line: 'kernel.sysrq = 1', state: present }
    - { regexp: '^kernel.core_uses_pid', line: 'kernel.core_uses_pid = 1', state: present }
    - { regexp: '^kernel.msgmnb', line: 'kernel.msgmnb = 65536', state: present }
    - { regexp: '^kernel.msgmax', line: 'kernel.msgmax = 65536', state: present }
    - { regexp: '^kernel.msgmni', line: 'kernel.msgmni = 2048', state: present }
    - { regexp: '^net.ipv4.tcp_syncookies', line: 'net.ipv4.tcp_syncookies = 1', state: present }
    - { regexp: '^net.ipv4.ip_forward', line: 'net.ipv4.ip_forward = 0', state: present }
    - { regexp: '^net.ipv4.conf.default.accept_source_route', line: 'net.ipv4.conf.default.accept_source_route = 0', state: present }
    - { regexp: '^net.ipv4.tcp_tw_recycle', line: 'net.ipv4.tcp_tw_recycle = 1', state: present }
    - { regexp: '^net.ipv4.tcp_max_syn_backlog', line: 'net.ipv4.tcp_max_syn_backlog = 4096', state: present }
    - { regexp: '^net.ipv4.conf.all.arp_filter', line: 'net.ipv4.conf.all.arp_filter = 1', state: present }
    - { regexp: '^net.ipv4.ip_local_port_range', line: 'net.ipv4.ip_local_port_range = 1025 65535', state: present }
    - { regexp: '^net.core.netdev_max_backlog', line: 'net.core.netdev_max_backlog = 10000', state: present }
    - { regexp: '^net.core.rmem_max', line: 'net.core.rmem_max = 2097152', state: present }
    - { regexp: '^net.core.wmem_max', line: 'net.core.wmem_max = 2097152', state: present }
    - { regexp: '^vm.overcommit_memory', line: 'vm.overcommit_memory = 2', state: present }
#  notify:
#    - reload sysctl

- name: Register master key
  command: |
    cat ~gpadmin/.ssh/id_rsa.pub
  changed_when: False
  delegate_to: "{{ groups['greenplum-master'][0] }}"
  register: pubkey

- name: Add Master key on All nodes
  authorized_key:
    user: gpadmin
    state: present
    key: "{{ pubkey.stdout }}"

- name: get port, default 22
  delegate_to: localhost
  set_fact:
    ansible_ssh_port: "{{ hostvars[inventory_hostname]['ansible_ssh_port'] | default('22') }}"

- name: Ensure ssh host key known
  lineinfile:
    dest: ~gpadmin/.ssh/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -trsa -p' + ansible_ssh_port + ' ' + item) }}"
  delegate_to: "{{ groups['greenplum-master'][0] }}"
  become_user: gpadmin
  run_once: True
  with_items: "{{ ansible_play_hosts }}"

- name: Create data directories | Workers
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: gpadmin
    group: gpadmin
  when: inventory_hostname in groups['greenplum-workers']
  with_items:
  - "/data1/primary"
  - "/data2/primary"

- name: Create data directories | Master
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: gpadmin
    group: gpadmin
  when: inventory_hostname in groups['greenplum-master']
  with_items:
  - "/data/master"

- name: Create init configs file
  template:
    src: "{{ item }}.j2"
    dest: "~gpadmin/{{ item }}"
    owner: gpadmin
    group: gpadmin
    mode: 0660
  when: inventory_hostname in groups['greenplum-master']
  with_items:
    - hostfile_gpinitsystem
    - gpinitsystem_config

- meta: flush_handlers

- name: Add ENV to .bashrc
  blockinfile:
    path: ~gpadmin/.bashrc
    block: |
        . /usr/lib/gpdb/greenplum_path.sh
        export MASTER_DATA_DIRECTORY=/data/master/gpseg-1
    marker: "#### {mark} GreenPlum ANSIBLE MANAGED BLOCK ####"
    insertafter: EOF
    create: yes
    backup: yes
  become_user: gpadmin
  when: inventory_hostname in groups['greenplum-master']